/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nesneodev;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import nesneodev.DataAccess.Arac;
import nesneodev.DataAccess.AracDataAccess;
import nesneodev.DataAccess.Paket;
/**
 *
 * @author Caglar
 */
public class AracListesi extends javax.swing.JFrame {

    /**
     * Creates new form AracListesi
     */
    public AracListesi() {
        initComponents();
        try{
            AracListesiGetir();
        } catch (IOException ex) {
            Logger.getLogger(Kargo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_depoYukle = new javax.swing.JButton();
        btn_tumunuAktar = new javax.swing.JButton();
        btn_aracCikar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistemdeki Araçlar");

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Araç Plakası", "Maksimum Desi", "Sigortalı Desi", "Özel Desi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Yüklü paketleri görmek için bir araç seçin.");
        jTable1.setRowHeight(18);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seri Numarası", "Paket Tipi", "İçerik Özelliği", "Desi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(18);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Sistemdeki Araçlar :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Seçili Araçta Yüklü Paketler :");

        btn_depoYukle.setText("Seçili Paketleri Depoya Aktar");
        btn_depoYukle.setEnabled(false);
        btn_depoYukle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_depoYukleActionPerformed(evt);
            }
        });

        btn_tumunuAktar.setText("Tüm Paketleri Depoya Aktar");
        btn_tumunuAktar.setEnabled(false);
        btn_tumunuAktar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tumunuAktarActionPerformed(evt);
            }
        });

        btn_aracCikar.setText("Aracı Depodan Çıkar");
        btn_aracCikar.setEnabled(false);
        btn_aracCikar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aracCikarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_tumunuAktar, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_depoYukle, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_aracCikar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btn_aracCikar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_depoYukle)
                    .addComponent(btn_tumunuAktar))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(755, 805));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        String secilenArac;
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int indis = jTable1.getSelectedRow();
        
        secilenArac = model.getValueAt(indis, 0).toString();
        
        try {
            AracYukluPaketGetir(secilenArac);
        } catch (IOException ex) {
            Logger.getLogger(AracListesi.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn_depoYukle.setEnabled(false);
        btn_aracCikar.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        ButonKontrol();
    }//GEN-LAST:event_jTable2MouseClicked

    private void btn_depoYukleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_depoYukleActionPerformed
       DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
       AracDataAccess ada = new AracDataAccess();
        
        int indis[] = jTable2.getSelectedRows();
        
        ArrayList<String> paketler = new ArrayList<String>();
        
        for(int i = 0; i < indis.length; i++){
            paketler.add(jTable2.getValueAt(indis[i], 0).toString().trim());
            //System.out.println(jTable2.getValueAt(indis[i], 0).toString().trim());
        }
        
        DefaultTableModel amodel = (DefaultTableModel)jTable1.getModel();
        int index = jTable1.getSelectedRow();
        
        String plaka = amodel.getValueAt(index, 0).toString();
        
        try {
            ada.PaketDepoYukle(plaka, paketler);
            JOptionPane.showMessageDialog(null, "Seçili paketler depoya aktarıldı.", "Bilgi.", JOptionPane.INFORMATION_MESSAGE);
            
            Arrays.sort(indis);

            for(int i = indis.length - 1; i >= 0; i--){
                model.removeRow(indis[i]);
            }
            
        } catch (IOException ex) {
            Logger.getLogger(AracListesi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_depoYukleActionPerformed

    private void btn_tumunuAktarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tumunuAktarActionPerformed
        // TODO : Burada araçtaki tüm paketler depoaya yüklenecek.
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int indis = jTable1.getSelectedRow();
        
        String plaka = model.getValueAt(indis, 0).toString();
        AracDataAccess ada = new AracDataAccess();
        try {
            ada.PaketDepoAktar(plaka);
            JOptionPane.showMessageDialog(null, plaka + " plakalı araçta yüklü tüm paketler depoya aktarıldı.", "Bilgi.", JOptionPane.INFORMATION_MESSAGE);
            DefaultTableModel pmodel = (DefaultTableModel) jTable2.getModel();
            int rowCount = pmodel.getRowCount();

            for (int i = rowCount - 1; i >= 0; i--) {
                pmodel.removeRow(i);
            }
        } catch (IOException ex) {
            Logger.getLogger(AracListesi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_tumunuAktarActionPerformed

    private void btn_aracCikarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aracCikarActionPerformed
        AracDataAccess ada = new AracDataAccess();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int indis = jTable1.getSelectedRow();
        
        String plaka = model.getValueAt(indis, 0).toString();
        
        int sonuc = JOptionPane.showConfirmDialog(null, "Seçili aracı depodan çıkarmak istediğinizden emin misiniz?", "İşlem Onayla!!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(sonuc == JOptionPane.YES_OPTION){
            try {
                ada.AracCikar(plaka);
                JOptionPane.showMessageDialog(null, "Seçili araç depodan çıkarıldı.", "Bilgi", JOptionPane.INFORMATION_MESSAGE);
                model.removeRow(indis);
            } catch (IOException ex) {
                Logger.getLogger(AracListesi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_aracCikarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AracListesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AracListesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AracListesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AracListesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AracListesi().setVisible(true);
            }
        });
    }
    
    //Araçta yüklü paketlerin tabloya yazdırılması.
    private void AracYukluPaketGetir(String plaka) throws IOException{
        AracDataAccess ada = new AracDataAccess();
        ArrayList<Paket> paketler = ada.AracYukluPaketler(plaka);
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        int rowCount = model.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Object rowData[] = new Object[4];

        for(int i=0; i<paketler.size(); i++){
            rowData[0] = paketler.get(i).SeriNo;
            rowData[1] = (paketler.get(i).Tip == 'P' ? "Posta" : (paketler.get(i).Tip == 'K') ? "Küçük Paket" : (paketler.get(i).Tip == 'B') ? "Büyük Paket" : "Özel Gönderi"); 
            rowData[2] = (paketler.get(i).IcerikTip == 'N' ? "Normal Paket" : (paketler.get(i).IcerikTip == 'T') ? "Ticari Paket" : "Sigortalı Paket");
            rowData[3] = paketler.get(i).Desi;
            model.addRow(rowData);
        }
        
        if(paketler.size() > 0){
            btn_tumunuAktar.setEnabled(true);
        }else{
            btn_tumunuAktar.setEnabled(false);
        }
    }
    
    //Araç listesinin tabloya doldurulması.
    private void AracListesiGetir() throws IOException{
        AracDataAccess ada = new AracDataAccess();
        ArrayList<Arac> araclar = ada.AracDetayBigiler();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int rowCount = model.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Object rowData[] = new Object[4];
        for(int i=0; i<araclar.size(); i++){
            rowData[0] = araclar.get(i).Plaka;
            rowData[1] = araclar.get(i).MaxDesi; 
            rowData[2] = araclar.get(i).SigortaDesi;
            rowData[3] = araclar.get(i).OzelDesi;
            model.addRow(rowData);
        }
    }

    
    private void ButonKontrol(){
        DefaultTableModel model2 = (DefaultTableModel)jTable2.getModel();
        int rowCount = model2.getRowCount();
        
        if(rowCount == 0){
            btn_depoYukle.setEnabled(false);
        }else{
            btn_depoYukle.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aracCikar;
    private javax.swing.JButton btn_depoYukle;
    private javax.swing.JButton btn_tumunuAktar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
